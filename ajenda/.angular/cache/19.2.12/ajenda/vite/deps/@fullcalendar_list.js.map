{
  "version": 3,
  "sources": ["../../../../../../node_modules/@fullcalendar/list/internal.js", "../../../../../../node_modules/@fullcalendar/list/index.js"],
  "sourcesContent": ["import { BaseComponent, getUniqueDomId, getDateMeta, buildNavLinkAttrs, ContentContainer, getDayClassNames, formatDayString, createFormatter, EventContainer, getSegAnchorAttrs, isMultiDayRange, buildSegTimeText, DateComponent, memoize, ViewContainer, Scroller, NowTimer, sortEventSegs, getSegMeta, sliceEventStore, intersectRanges, startOfDay, addDays, injectStyles } from '@fullcalendar/core/internal.js';\nimport { createElement, Fragment } from '@fullcalendar/core/preact.js';\nclass ListViewHeaderRow extends BaseComponent {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      textId: getUniqueDomId()\n    };\n  }\n  render() {\n    let {\n      theme,\n      dateEnv,\n      options,\n      viewApi\n    } = this.context;\n    let {\n      cellId,\n      dayDate,\n      todayRange\n    } = this.props;\n    let {\n      textId\n    } = this.state;\n    let dayMeta = getDateMeta(dayDate, todayRange);\n    // will ever be falsy?\n    let text = options.listDayFormat ? dateEnv.format(dayDate, options.listDayFormat) : '';\n    // will ever be falsy? also, BAD NAME \"alt\"\n    let sideText = options.listDaySideFormat ? dateEnv.format(dayDate, options.listDaySideFormat) : '';\n    let renderProps = Object.assign({\n      date: dateEnv.toDate(dayDate),\n      view: viewApi,\n      textId,\n      text,\n      sideText,\n      navLinkAttrs: buildNavLinkAttrs(this.context, dayDate),\n      sideNavLinkAttrs: buildNavLinkAttrs(this.context, dayDate, 'day', false)\n    }, dayMeta);\n    // TODO: make a reusable HOC for dayHeader (used in daygrid/timegrid too)\n    return createElement(ContentContainer, {\n      elTag: \"tr\",\n      elClasses: ['fc-list-day', ...getDayClassNames(dayMeta, theme)],\n      elAttrs: {\n        'data-date': formatDayString(dayDate)\n      },\n      renderProps: renderProps,\n      generatorName: \"dayHeaderContent\",\n      customGenerator: options.dayHeaderContent,\n      defaultGenerator: renderInnerContent,\n      classNameGenerator: options.dayHeaderClassNames,\n      didMount: options.dayHeaderDidMount,\n      willUnmount: options.dayHeaderWillUnmount\n    }, InnerContent =>\n    // TODO: force-hide top border based on :first-child\n    createElement(\"th\", {\n      scope: \"colgroup\",\n      colSpan: 3,\n      id: cellId,\n      \"aria-labelledby\": textId\n    }, createElement(InnerContent, {\n      elTag: \"div\",\n      elClasses: ['fc-list-day-cushion', theme.getClass('tableCellShaded')]\n    })));\n  }\n}\nfunction renderInnerContent(props) {\n  return createElement(Fragment, null, props.text && createElement(\"a\", Object.assign({\n    id: props.textId,\n    className: \"fc-list-day-text\"\n  }, props.navLinkAttrs), props.text), props.sideText && (/* not keyboard tabbable */createElement(\"a\", Object.assign({\n    \"aria-hidden\": true,\n    className: \"fc-list-day-side-text\"\n  }, props.sideNavLinkAttrs), props.sideText)));\n}\nconst DEFAULT_TIME_FORMAT = createFormatter({\n  hour: 'numeric',\n  minute: '2-digit',\n  meridiem: 'short'\n});\nclass ListViewEventRow extends BaseComponent {\n  render() {\n    let {\n      props,\n      context\n    } = this;\n    let {\n      options\n    } = context;\n    let {\n      seg,\n      timeHeaderId,\n      eventHeaderId,\n      dateHeaderId\n    } = props;\n    let timeFormat = options.eventTimeFormat || DEFAULT_TIME_FORMAT;\n    return createElement(EventContainer, Object.assign({}, props, {\n      elTag: \"tr\",\n      elClasses: ['fc-list-event', seg.eventRange.def.url && 'fc-event-forced-url'],\n      defaultGenerator: () => renderEventInnerContent(seg, context) /* weird */,\n      seg: seg,\n      timeText: \"\",\n      disableDragging: true,\n      disableResizing: true\n    }), (InnerContent, eventContentArg) => createElement(Fragment, null, buildTimeContent(seg, timeFormat, context, timeHeaderId, dateHeaderId), createElement(\"td\", {\n      \"aria-hidden\": true,\n      className: \"fc-list-event-graphic\"\n    }, createElement(\"span\", {\n      className: \"fc-list-event-dot\",\n      style: {\n        borderColor: eventContentArg.borderColor || eventContentArg.backgroundColor\n      }\n    })), createElement(InnerContent, {\n      elTag: \"td\",\n      elClasses: ['fc-list-event-title'],\n      elAttrs: {\n        headers: `${eventHeaderId} ${dateHeaderId}`\n      }\n    })));\n  }\n}\nfunction renderEventInnerContent(seg, context) {\n  let interactiveAttrs = getSegAnchorAttrs(seg, context);\n  return createElement(\"a\", Object.assign({}, interactiveAttrs), seg.eventRange.def.title);\n}\nfunction buildTimeContent(seg, timeFormat, context, timeHeaderId, dateHeaderId) {\n  let {\n    options\n  } = context;\n  if (options.displayEventTime !== false) {\n    let eventDef = seg.eventRange.def;\n    let eventInstance = seg.eventRange.instance;\n    let doAllDay = false;\n    let timeText;\n    if (eventDef.allDay) {\n      doAllDay = true;\n    } else if (isMultiDayRange(seg.eventRange.range)) {\n      // TODO: use (!isStart || !isEnd) instead?\n      if (seg.isStart) {\n        timeText = buildSegTimeText(seg, timeFormat, context, null, null, eventInstance.range.start, seg.end);\n      } else if (seg.isEnd) {\n        timeText = buildSegTimeText(seg, timeFormat, context, null, null, seg.start, eventInstance.range.end);\n      } else {\n        doAllDay = true;\n      }\n    } else {\n      timeText = buildSegTimeText(seg, timeFormat, context);\n    }\n    if (doAllDay) {\n      let renderProps = {\n        text: context.options.allDayText,\n        view: context.viewApi\n      };\n      return createElement(ContentContainer, {\n        elTag: \"td\",\n        elClasses: ['fc-list-event-time'],\n        elAttrs: {\n          headers: `${timeHeaderId} ${dateHeaderId}`\n        },\n        renderProps: renderProps,\n        generatorName: \"allDayContent\",\n        customGenerator: options.allDayContent,\n        defaultGenerator: renderAllDayInner,\n        classNameGenerator: options.allDayClassNames,\n        didMount: options.allDayDidMount,\n        willUnmount: options.allDayWillUnmount\n      });\n    }\n    return createElement(\"td\", {\n      className: \"fc-list-event-time\"\n    }, timeText);\n  }\n  return null;\n}\nfunction renderAllDayInner(renderProps) {\n  return renderProps.text;\n}\n\n/*\nResponsible for the scroller, and forwarding event-related actions into the \"grid\".\n*/\nclass ListView extends DateComponent {\n  constructor() {\n    super(...arguments);\n    this.computeDateVars = memoize(computeDateVars);\n    this.eventStoreToSegs = memoize(this._eventStoreToSegs);\n    this.state = {\n      timeHeaderId: getUniqueDomId(),\n      eventHeaderId: getUniqueDomId(),\n      dateHeaderIdRoot: getUniqueDomId()\n    };\n    this.setRootEl = rootEl => {\n      if (rootEl) {\n        this.context.registerInteractiveComponent(this, {\n          el: rootEl\n        });\n      } else {\n        this.context.unregisterInteractiveComponent(this);\n      }\n    };\n  }\n  render() {\n    let {\n      props,\n      context\n    } = this;\n    let {\n      dayDates,\n      dayRanges\n    } = this.computeDateVars(props.dateProfile);\n    let eventSegs = this.eventStoreToSegs(props.eventStore, props.eventUiBases, dayRanges);\n    return createElement(ViewContainer, {\n      elRef: this.setRootEl,\n      elClasses: ['fc-list', context.theme.getClass('table'), context.options.stickyHeaderDates !== false ? 'fc-list-sticky' : ''],\n      viewSpec: context.viewSpec\n    }, createElement(Scroller, {\n      liquid: !props.isHeightAuto,\n      overflowX: props.isHeightAuto ? 'visible' : 'hidden',\n      overflowY: props.isHeightAuto ? 'visible' : 'auto'\n    }, eventSegs.length > 0 ? this.renderSegList(eventSegs, dayDates) : this.renderEmptyMessage()));\n  }\n  renderEmptyMessage() {\n    let {\n      options,\n      viewApi\n    } = this.context;\n    let renderProps = {\n      text: options.noEventsText,\n      view: viewApi\n    };\n    return createElement(ContentContainer, {\n      elTag: \"div\",\n      elClasses: ['fc-list-empty'],\n      renderProps: renderProps,\n      generatorName: \"noEventsContent\",\n      customGenerator: options.noEventsContent,\n      defaultGenerator: renderNoEventsInner,\n      classNameGenerator: options.noEventsClassNames,\n      didMount: options.noEventsDidMount,\n      willUnmount: options.noEventsWillUnmount\n    }, InnerContent => createElement(InnerContent, {\n      elTag: \"div\",\n      elClasses: ['fc-list-empty-cushion']\n    }));\n  }\n  renderSegList(allSegs, dayDates) {\n    let {\n      theme,\n      options\n    } = this.context;\n    let {\n      timeHeaderId,\n      eventHeaderId,\n      dateHeaderIdRoot\n    } = this.state;\n    let segsByDay = groupSegsByDay(allSegs); // sparse array\n    return createElement(NowTimer, {\n      unit: \"day\"\n    }, (nowDate, todayRange) => {\n      let innerNodes = [];\n      for (let dayIndex = 0; dayIndex < segsByDay.length; dayIndex += 1) {\n        let daySegs = segsByDay[dayIndex];\n        if (daySegs) {\n          // sparse array, so might be undefined\n          let dayStr = formatDayString(dayDates[dayIndex]);\n          let dateHeaderId = dateHeaderIdRoot + '-' + dayStr;\n          // append a day header\n          innerNodes.push(createElement(ListViewHeaderRow, {\n            key: dayStr,\n            cellId: dateHeaderId,\n            dayDate: dayDates[dayIndex],\n            todayRange: todayRange\n          }));\n          daySegs = sortEventSegs(daySegs, options.eventOrder);\n          for (let seg of daySegs) {\n            innerNodes.push(createElement(ListViewEventRow, Object.assign({\n              key: dayStr + ':' + seg.eventRange.instance.instanceId /* are multiple segs for an instanceId */,\n              seg: seg,\n              isDragging: false,\n              isResizing: false,\n              isDateSelecting: false,\n              isSelected: false,\n              timeHeaderId: timeHeaderId,\n              eventHeaderId: eventHeaderId,\n              dateHeaderId: dateHeaderId\n            }, getSegMeta(seg, todayRange, nowDate))));\n          }\n        }\n      }\n      return createElement(\"table\", {\n        className: 'fc-list-table ' + theme.getClass('table')\n      }, createElement(\"thead\", null, createElement(\"tr\", null, createElement(\"th\", {\n        scope: \"col\",\n        id: timeHeaderId\n      }, options.timeHint), createElement(\"th\", {\n        scope: \"col\",\n        \"aria-hidden\": true\n      }), createElement(\"th\", {\n        scope: \"col\",\n        id: eventHeaderId\n      }, options.eventHint))), createElement(\"tbody\", null, innerNodes));\n    });\n  }\n  _eventStoreToSegs(eventStore, eventUiBases, dayRanges) {\n    return this.eventRangesToSegs(sliceEventStore(eventStore, eventUiBases, this.props.dateProfile.activeRange, this.context.options.nextDayThreshold).fg, dayRanges);\n  }\n  eventRangesToSegs(eventRanges, dayRanges) {\n    let segs = [];\n    for (let eventRange of eventRanges) {\n      segs.push(...this.eventRangeToSegs(eventRange, dayRanges));\n    }\n    return segs;\n  }\n  eventRangeToSegs(eventRange, dayRanges) {\n    let {\n      dateEnv\n    } = this.context;\n    let {\n      nextDayThreshold\n    } = this.context.options;\n    let range = eventRange.range;\n    let allDay = eventRange.def.allDay;\n    let dayIndex;\n    let segRange;\n    let seg;\n    let segs = [];\n    for (dayIndex = 0; dayIndex < dayRanges.length; dayIndex += 1) {\n      segRange = intersectRanges(range, dayRanges[dayIndex]);\n      if (segRange) {\n        seg = {\n          component: this,\n          eventRange,\n          start: segRange.start,\n          end: segRange.end,\n          isStart: eventRange.isStart && segRange.start.valueOf() === range.start.valueOf(),\n          isEnd: eventRange.isEnd && segRange.end.valueOf() === range.end.valueOf(),\n          dayIndex\n        };\n        segs.push(seg);\n        // detect when range won't go fully into the next day,\n        // and mutate the latest seg to the be the end.\n        if (!seg.isEnd && !allDay && dayIndex + 1 < dayRanges.length && range.end < dateEnv.add(dayRanges[dayIndex + 1].start, nextDayThreshold)) {\n          seg.end = range.end;\n          seg.isEnd = true;\n          break;\n        }\n      }\n    }\n    return segs;\n  }\n}\nfunction renderNoEventsInner(renderProps) {\n  return renderProps.text;\n}\nfunction computeDateVars(dateProfile) {\n  let dayStart = startOfDay(dateProfile.renderRange.start);\n  let viewEnd = dateProfile.renderRange.end;\n  let dayDates = [];\n  let dayRanges = [];\n  while (dayStart < viewEnd) {\n    dayDates.push(dayStart);\n    dayRanges.push({\n      start: dayStart,\n      end: addDays(dayStart, 1)\n    });\n    dayStart = addDays(dayStart, 1);\n  }\n  return {\n    dayDates,\n    dayRanges\n  };\n}\n// Returns a sparse array of arrays, segs grouped by their dayIndex\nfunction groupSegsByDay(segs) {\n  let segsByDay = []; // sparse array\n  let i;\n  let seg;\n  for (i = 0; i < segs.length; i += 1) {\n    seg = segs[i];\n    (segsByDay[seg.dayIndex] || (segsByDay[seg.dayIndex] = [])).push(seg);\n  }\n  return segsByDay;\n}\nvar css_248z = \":root{--fc-list-event-dot-width:10px;--fc-list-event-hover-bg-color:#f5f5f5}.fc-theme-standard .fc-list{border:1px solid var(--fc-border-color)}.fc .fc-list-empty{align-items:center;background-color:var(--fc-neutral-bg-color);display:flex;height:100%;justify-content:center}.fc .fc-list-empty-cushion{margin:5em 0}.fc .fc-list-table{border-style:hidden;width:100%}.fc .fc-list-table tr>*{border-left:0;border-right:0}.fc .fc-list-sticky .fc-list-day>*{background:var(--fc-page-bg-color);position:sticky;top:0}.fc .fc-list-table thead{left:-10000px;position:absolute}.fc .fc-list-table tbody>tr:first-child th{border-top:0}.fc .fc-list-table th{padding:0}.fc .fc-list-day-cushion,.fc .fc-list-table td{padding:8px 14px}.fc .fc-list-day-cushion:after{clear:both;content:\\\"\\\";display:table}.fc-theme-standard .fc-list-day-cushion{background-color:var(--fc-neutral-bg-color)}.fc-direction-ltr .fc-list-day-text,.fc-direction-rtl .fc-list-day-side-text{float:left}.fc-direction-ltr .fc-list-day-side-text,.fc-direction-rtl .fc-list-day-text{float:right}.fc-direction-ltr .fc-list-table .fc-list-event-graphic{padding-right:0}.fc-direction-rtl .fc-list-table .fc-list-event-graphic{padding-left:0}.fc .fc-list-event.fc-event-forced-url{cursor:pointer}.fc .fc-list-event:hover td{background-color:var(--fc-list-event-hover-bg-color)}.fc .fc-list-event-graphic,.fc .fc-list-event-time{white-space:nowrap;width:1px}.fc .fc-list-event-dot{border:calc(var(--fc-list-event-dot-width)/2) solid var(--fc-event-border-color);border-radius:calc(var(--fc-list-event-dot-width)/2);box-sizing:content-box;display:inline-block;height:0;width:0}.fc .fc-list-event-title a{color:inherit;text-decoration:none}.fc .fc-list-event.fc-event-forced-url:hover a{text-decoration:underline}\";\ninjectStyles(css_248z);\nexport { ListView };", "import { createPlugin } from '@fullcalendar/core/index.js';\nimport { ListView } from './internal.js';\nimport { identity, createFormatter } from '@fullcalendar/core/internal.js';\nimport '@fullcalendar/core/preact.js';\nconst OPTION_REFINERS = {\n  listDayFormat: createFalsableFormatter,\n  listDaySideFormat: createFalsableFormatter,\n  noEventsClassNames: identity,\n  noEventsContent: identity,\n  noEventsDidMount: identity,\n  noEventsWillUnmount: identity\n  // noEventsText is defined in base options\n};\nfunction createFalsableFormatter(input) {\n  return input === false ? null : createFormatter(input);\n}\nvar index = createPlugin({\n  name: '@fullcalendar/list',\n  optionRefiners: OPTION_REFINERS,\n  views: {\n    list: {\n      component: ListView,\n      buttonTextKey: 'list',\n      listDayFormat: {\n        month: 'long',\n        day: 'numeric',\n        year: 'numeric'\n      } // like \"January 1, 2016\"\n    },\n    listDay: {\n      type: 'list',\n      duration: {\n        days: 1\n      },\n      listDayFormat: {\n        weekday: 'long'\n      } // day-of-week is all we need. full date is probably in headerToolbar\n    },\n    listWeek: {\n      type: 'list',\n      duration: {\n        weeks: 1\n      },\n      listDayFormat: {\n        weekday: 'long'\n      },\n      listDaySideFormat: {\n        month: 'long',\n        day: 'numeric',\n        year: 'numeric'\n      }\n    },\n    listMonth: {\n      type: 'list',\n      duration: {\n        month: 1\n      },\n      listDaySideFormat: {\n        weekday: 'long'\n      } // day-of-week is nice-to-have\n    },\n    listYear: {\n      type: 'list',\n      duration: {\n        year: 1\n      },\n      listDaySideFormat: {\n        weekday: 'long'\n      } // day-of-week is nice-to-have\n    }\n  }\n});\nexport { index as default };"],
  "mappings": "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",
  "names": []
}
